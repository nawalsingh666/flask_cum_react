{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","handleClick","event","state","game_finished","setState","oldState","new_arena","arena","i","parseInt","target","dataset","key","split","j","xs_turn","console","log","filled_places","checkGameStatus","checkPrimaryDiagonal","new_arena_colors","arena_colors","game_result_message","checkOtherDiagonal","checkColumns","checkRows","length","checkDraw","resetGame","rows","this","cols","push","className","data-key","onClick","id","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6521367e.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react'\nimport ReactDOM from \"react-dom\";\n\nclass App extends React.Component{\n\n  constructor() {\n    super();\n    this.state = {\n      // arena: [[' ', ' ', ' '], [' ', ' ', ' '], [' ', ' ', ' ']],\n      arena: [[null, null, null],\n        [null, null, null],\n        [null, null, null]],\n      // arena: [['#', 'o', '#'], ['#', 'o', '#'], ['#', 'o', '#']],\n      xs_turn: true,\n      filled_places:0,\n      game_finished: false,\n      game_result_message: \"\",\n      arena_colors: [[\"bisque_color\", \"bisque_color\", \"bisque_color\"],\n        [\"bisque_color\", \"bisque_color\", \"bisque_color\"],\n        [\"bisque_color\", \"bisque_color\", \"bisque_color\"]],\n    }\n  }\n\n  render(){\n\n    var rows = []\n    for (let i = 0; i <this.state.arena.length; i++) {\n      var cols = []\n      for (let j = 0; j < this.state.arena[i].length; j++) {\n        cols.push(<td className={this.state.arena_colors[i][j]} data-key={[i,j]} onClick={this.handleClick}> {this.state.arena[i][j] == null?\" \": this.state.arena[i][j]} </td>)\n      }\n      rows.push(<tr> {cols} </tr>)\n    }\n\n    var aa = <h3>hi </h3>\n    return (\n        <div className=\"App\">\n\n          <canvas id=\"myCanvas\"> </canvas>\n\n          <h1> Tic Tac Toe </h1>\n\n          <table id=\"tic_tac_toe_arena\">\n            {rows}\n          </table>\n\n          <h3 id=\"game_result\"> {this.state.game_result_message} </h3>\n\n          <button id=\"reset_game\" onClick={this.resetGame}> Reset Game </button>\n\n\n        </div>\n    );\n  }\n\n  handleClick = (event)=>{\n    if (this.state.game_finished){\n      return\n    }\n    this.setState(oldState =>{\n      var new_arena = [...oldState.arena]\n      const i = parseInt(event.target.dataset.key.split(',')[0]);\n      const j = parseInt(event.target.dataset.key.split(',')[1]);\n      if (!(new_arena[i][j] === null)){\n        console.log(\"early return ):\")\n        return\n      }\n      new_arena[i][j] = this.state.xs_turn? 'x': 'o'\n      console.log(\"new arena\", new_arena)\n      return {\n        arena: [...new_arena],\n        xs_turn: !oldState.xs_turn,\n        filled_places: oldState.filled_places + 1\n      }\n    }, this.checkGameStatus)\n  }\n\n  checkGameStatus = ()=>{\n    console.log(\"checking primary diagonal\")\n    this.checkPrimaryDiagonal()}\n\n  checkPrimaryDiagonal = ()=> {\n    //check principal diagonal\n    if (!((this.state.arena[0][0] === null) || (this.state.arena[1][1] === null) || (this.state.arena[2][2] === null))\n        && (this.state.arena[0][0] === this.state.arena[1][1])\n        && (this.state.arena[0][0] === this.state.arena[2][2])) {\n      this.setState(oldState => {\n\n        var new_arena_colors = [...oldState.arena_colors]\n        new_arena_colors[0][0] = \"green_color\"\n        new_arena_colors[1][1] = \"green_color\"\n        new_arena_colors[2][2] = \"green_color\"\n\n        return {\n          game_finished: true,\n          game_result_message: `Player ${this.state.xs_turn ? \"o\" : \"x\"} won!! `,\n          arena_colors: [...new_arena_colors]\n        }\n      }, this.checkOtherDiagonal)\n    }else {\n      this.checkOtherDiagonal()\n    }\n  }\n\n  checkOtherDiagonal = ()=> {\n    // check other diagonal\n    console.log(\"checking other diagonal\")\n    if (!((this.state.arena[2][0] === null) || (this.state.arena[1][1] === null) || (this.state.arena[0][2] === null))\n        && (this.state.arena[2][0] === this.state.arena[1][1])\n        && (this.state.arena[2][0] === this.state.arena[0][2])) {\n\n      this.setState(oldState => {\n        var new_arena_colors = [...oldState.arena_colors]\n        new_arena_colors[2][0] = \"green_color\"\n        new_arena_colors[1][1] = \"green_color\"\n        new_arena_colors[0][2] = \"green_color\"\n        return {\n          game_finished: true,\n          game_result_message: `Player ${this.state.xs_turn ? \"o\" : \"x\"} won!! `,\n          arena_colors: [...new_arena_colors]\n        }\n      }, this.checkColumns)\n    }else {\n      this.checkColumns()\n    }\n  }\n\n  checkColumns = ()=>{\n    console.log(\"checking cols\")\n    // rows and columns ...\n    for (let i = 0; i < this.state.arena.length; i++) {\n      if (!( (this.state.arena[0][i] === null) || (this.state.arena[1][i] === null) || (this.state.arena[2][i] === null))\n          && (this.state.arena[0][i] === this.state.arena[1][i])\n          && (this.state.arena[0][i] === this.state.arena[2][i])){\n        this.setState(oldState=>{\n          console.log(\"won the game, setting game finihsed\")\n          var new_arena_colors = [...oldState.arena_colors]\n          new_arena_colors[0][i] = \"green_color\"\n          new_arena_colors[1][i] = \"green_color\"\n          new_arena_colors[2][i] = \"green_color\"\n          return {\n            game_finished: true,\n            game_result_message: `Player ${this.state.xs_turn?\"o\":\"x\"} won!! `,\n            arena_colors: [...new_arena_colors]\n          }\n        }, this.checkRows)\n\n        return // break the flow\n      }\n    }\n\n    this.checkRows()\n\n  }\n\n  checkRows = ()=>{\n    console.log(\"checking rows\")\n    // rows and columns ...\n    for (let i = 0; i < this.state.arena.length; i++) {\n      if ( !( (this.state.arena[i][0] === null) || (this.state.arena[i][1] === null) || (this.state.arena[i][2] === null))\n          && (this.state.arena[i][0] === this.state.arena[i][1])\n          && (this.state.arena[i][0] === this.state.arena[i][2])){\n\n        this.setState(oldState=>{\n          var new_arena_colors = [...oldState.arena_colors]\n          new_arena_colors[i][0] = \"green_color\"\n          new_arena_colors[i][1] = \"green_color\"\n          new_arena_colors[i][2] = \"green_color\"\n          return {\n            game_finished: true,\n            game_result_message: `Player ${this.state.xs_turn?\"o\":\"x\"} won!! `,\n            arena_colors: [...new_arena_colors]\n          }\n\n        }, this.checkDraw)\n        return // break the flow here\n      }\n    }\n\n    // if none of the above worked\n    this.checkDraw()\n\n  }\n\n  checkDraw = ()=>{\n    console.log(\"game finished?? \", this.state.game_finished)\n    console.log(\"game filled_places \", this.state.filled_places)\n\n    if ( !this.state.game_finished && this.state.filled_places === 9){\n      this.setState({\n        arena_colors: [[\"gray_color\", \"gray_color\", \"gray_color\"],\n          [\"gray_color\", \"gray_color\", \"gray_color\"],\n          [\"gray_color\", \"gray_color\", \"gray_color\"]],\n      })\n    }\n    console.log(\"game finished again?? \", this.state.game_finished)\n  }\n\n  resetGame = ()=>{\n    this.setState({\n      arena: [[null, null, null], [null, null, null], [null, null, null]],\n      game_finished: false,\n      xs_turn: true,\n      filled_places:0,\n      arena_colors: [[\"bisque_color\", \"bisque_color\", \"bisque_color\"],\n        [\"bisque_color\", \"bisque_color\", \"bisque_color\"],\n        [\"bisque_color\", \"bisque_color\", \"bisque_color\"]],\n    })\n\n    // console.log(document.querySelector(\"#tic_tac_toe_arena\"))\n    // var tt = document.querySelector(\"#tic_tac_toe_arena\")\n    // for (let i = 0; i < tt.rows.length; i++) {\n    //   var row = tt.rows[i]\n    //   for (let j = 0; j < row.cells.length; j++) {\n    //     var elem = row.cells[j]\n    //     console.log(\"elem at \", i, j, \" is:: \", elem)\n    //     if(i==0 && j==0)\n    //     elem.setAttribute(\"class\", \"gray_color\")\n    //   }\n    // }\n\n  }\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}